name: 'CI'

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system:
          - 'ubuntu-latest'
          - 'windows-latest'
        php-version:
          - '8.0'
          - '8.1'
        composer-stability:
          - 'prefer-lowest'
          - 'prefer-stable'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache package dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.composer-stability }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.composer-stability }}-

      - name: Install package dependencies
        run: composer update --${{ matrix.composer-stability }} --prefer-dist --no-interaction --no-progress

      - name: Run PHPUnit
        run: ./vendor/bin/phpunit --no-interaction --do-not-cache-result --no-coverage

      - name: Run PHPCsFixer
        if: ${{ matrix.operating-system == 'ubuntu-latest' }}
        run: ./vendor/bin/php-cs-fixer fix --no-interaction --dry-run --diff --using-cache=no

      - name: Run Psalm
        if: ${{ matrix.operating-system == 'ubuntu-latest' }}
        run: ./vendor/bin/psalm --no-progress --no-cache --php-version=${{ matrix.php-version }} --output-format=github
